
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using EchoAttendance.Resources
@Scripts.Render("~/Content/jqxGrid/js")

<script>
    $(document).ready(function () {
        makeDates(["D_SessionDate"], "ModelSession", "ltr");
        setgrid();
        makeContextMenu("Menu", "GrdSession", 200, 100);
        $("#Menu").on('itemclick', function (event) {
            var args = event.args;
            var rowindex = $("#GrdSession").jqxGrid('getselectedrowindex');
            editrow = rowindex;
            var offset = $("#GrdSession").offset();
            var dataRecord = $("#GrdSession").jqxGrid('getrowdata', editrow);
            $("#SessionID").val(dataRecord.SessionID);
            $("#SessionTopic").val(dataRecord.SessionTopic);
            $("#D_SessionDate").val(moment(dataRecord.SessionDate).format("YYYY-MM-DD"));
            $("#ProgramID").val(dataRecord.ProgramID)
            $("#SiteID").val(dataRecord.SiteID);
            $("#ModelSession").modal('show');
        });
        $("#Save").on("click", function () {
            var validationResult = function (isValid) {
                if (isValid) {
                    if ($("#Attachment").val() != "") {
                        if ($("#Attachment").val().indexOf("#") > -1) {
                            toastr["error"]("FileNameInvalid");
                            return;
                        }
                        var size = document.getElementById('Attachment').files[0].size;
                        var ext = $('#Attachment').val().split('.').pop().toLowerCase();
                        if (size > 2097152) {
                            toastr["error"]('FileSizeError');
                            return;
                        }
                        if (ext != 'pdf' && ext != 'png' && ext != 'jpg' && ext != "jpeg") {
                            toastr["error"]("FileFormatError");
                            return;
                        }
                    }
                    var varURL = ($("#SessionID").val() == '0' || $("#SessionID").val() == '' || $("#SessionID").val() == null) ? '/Att/Session/Create' : '/Att/Session/Edit';
                    if ($("#SessionID").val() == '') {
                        $("#SessionID").remove();
                    }
                    var form = $('form')[0];

                    $.ajax({
                        url: varURL,
                        type: "POST",
                        data: new FormData(form),
                        processData: false,
                        contentType: false,
                        success: function (result) {
                            if (result == "saved") {
                                toastr["success"]('Record_Saved');
                                $('#GrdSession').jqxGrid('updatebounddata', 'data');
                                $('#frmSession').append("<input type='hidden' id='SessionID' name='SessionID' />");
                                //ClearSessionForm();
                                $('#ModelSession').modal('hide');

                            }
                            else if (result == "update") {
                                toastr["success"]('Record_Update"')
                                $('#GrdSession').jqxGrid('updatebounddata', 'data');
                                //ClearSessionForm();
                                $('#ModelSession').modal('hide');

                            }
                            else {
                                toastr["error"](result);
                            }
                        },
                        error: function (error) {
                            toastr["error"](error.responseText);
                        }
                    });
                }
            }
            $('#frmSession').jqxValidator('validate', validationResult)
        });

        $('#frmSession').jqxValidator({

         hintType: 'label',
         animationDuration: 0,
         rtl: true,
         rules: [
             { input: '#SessionTopic', message: 'Required', action: 'keyup, blur', rule: 'required' },

         ], theme: 'classic'
     });

    });


    function setgrid() {
        var columnrenderer = function (value) {
            return '<div style="text-align: center; margin-top: 50px;">' + value + '</div>';
        }
        var cellsrenderer2 = function (row, column, value) {
            if (value != "")
                //return "<div style='text-align: center; margin-top: 5px;'><a href='/Uploads/TRY/Jawaz/" + value + "' target='_blank'><i class='fas fa-paperclip'></i></a></div>";
                return "<div style='text-align: center; margin-top: 5px;'><a href='" + value + "' target='_blank'><i class='fas fa-paperclip'></i></a></div>";
            else
                return "";
        }
        const isRTL = JSON.parse(localStorage.getItem('isRTL'))
        const aln = (isRTL) ? 'right' : 'left';
        var isAdaptive = ($(document).width() <= 500) ? true : false;

        $("#GrdSession").jqxGrid(
            {
                width: '99%',
                enabletooltips: true,
                pageable: true,
                pagermode: 'simple',
                showfilterrow: true,
                filterable: true,
                editable: false,
                autoheight: true,
                columnsresize: false,
                sortable: true,
                pagesize: 15,
                altrows: true,
                rtl: isRTL,
                adaptive: isAdaptive,
                columns: [

                    { text: 'No #', dataField: 'SessionID', width: '5%', cellsalign: aln, align: aln },
                    { text: 'Program', dataField: 'ProgramName', width: '10%', cellsalign: aln, align: aln },
                    { text: 'Session Topic', dataField: 'SessionTopic', cellsalign: aln, align: aln },
                    { text: 'Session Date', dataField: 'SessionDate', width: '8%', cellsalign: aln, align: aln, cellsformat: 'dd-MMM-yyyy' },
                    { text: 'Site', dataField: 'SiteName', cellsalign: aln, align: aln },
                    { text: 'File', dataField: 'PresentationFile', width: '5%', cellsrenderer: cellsrenderer2, renderer: columnrenderer }

                ]

            });
         fillgrid('/Att/Session/SessionList');

    }

    function fillgrid(varurl) {

        var datafields = [
            { name: 'SessionID' },
            { name: 'SessionTopic' },
            { name: 'SessionDate', type: 'date', format: "dd-MMM-yyyy" },
            { name: 'ProgramID' },
            { name: 'SiteID' },
            { name: 'PresentationFile' },
            { name: 'ProgramName' },
            { name: 'SiteName' },

        ];
        var source =
        {
            datatype: "json",
            datafields: datafields,
            cache: false,
            //   url: '/HR/Dept/GetDept',
            url: varurl,
            root: 'Rows'
        };

        var dataadapter = new $.jqx.dataAdapter(source, {
            loadError: function (xhr, status, error) {
                console.log(error);
            }
        }
        );

        $("#GrdSession").jqxGrid(
            {
                source: dataadapter
            });
    }
</script>




<div class="card card-primary mb-3" id="customersTable" data-list="{&quot;valueNames&quot;:[&quot;name&quot;,&quot;email&quot;,&quot;phone&quot;,&quot;address&quot;,&quot;joined&quot;],&quot;page&quot;:10,&quot;pagination&quot;:true}">
    <div class="card-header">
        <div class="row flex-between-center">
            <div class="col-4 col-sm-auto d-flex align-items-center pe-0">
                <h5 class="fs-0 mb-0 text-nowrap py-2 py-xl-0">Sessions List </h5>
            </div>
            <div class="col-8 col-sm-auto text-end ps-2">
                <div id="table-customers-replace-element">

                    <button class="btn btn-outline-primary btn-sm" id="BtnAdd" type="button" data-bs-toggle="modal" data-bs-target="#ModelSession">
                        <span class="d-none d-sm-inline-block ms-1">New </span>
                        <span class="fas fa-plus" data-fa-transform="shrink-3 down-2"></span>
                    </button>

                </div>
            </div>
        </div>
    </div>
    <div class="card-body p-2 bg-light">
        <div class="table-responsive">
            <div id="GrdSession">
            </div>
        </div>
    </div>
</div>


<div id="ModelSession" class="modal fade" data-keyboard="false" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Session</h5>
                <button type="button" class="btn-close btn btn-sm btn-circle transition-base p-0" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="frmSession">
                <div class="modal-body">
                    <div class="row p-2">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label" for="SessionTopic">SessionTopic </label>
                                <input type="text" id="SessionTopic" name="SessionTopic" class="form-control form-control-sm " />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label" for="D_SessionDate">Session Date </label>
                                <input type="text" id="D_SessionDate" name="SessionDate" class="form-control form-control-sm " />
                            </div>
                        </div>
                    </div>
                    <div class="row p-2">
                        <div class="col-md-6">
                            <label for="ProgramID"> Program</label><br />
                            @Html.DropDownList("ProgramID", null, htmlAttributes: new { @class = "select_2 form-control form-control-sm" })

                        </div>
                        <div class="col-md-6">
                            <label for="SiteID"> Site</label><br />
                            @Html.DropDownList("SiteID", null, htmlAttributes: new { @class = "select_2 form-control form-control-sm" })
                        </div>
                    </div>
                    <div class="row p-2">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label" for="Attachment">Presentation File</label>
                                <span id="spAttachment"></span>
                                <input type="file" id="Attachment" name="Attachment" class="form-control form-control-sm" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" id="SessionID" name="SessionID" value="0" />
                    <button type="button" id="Save" class="btn btn-sm btn-outline-primary">Save</button>
                    <button type="button" id="Cancel" class="btn btn-sm btn-outline-danger" data-bs-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div id="Menu">
    <ul dir="rtl">
        <li>
            <img src="~/images/pencil.png" />
            <span>Edit</span>
        </li>

    </ul>
</div>


